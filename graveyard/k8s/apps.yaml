apiVersion: apps/v1
kind: Deployment
metadata:
  name: back
  labels:
    app: kafka
    component: back
spec:
  selector:
    matchLabels:
      app: kafka
      component: back
  template:
    metadata:
      labels:
        app: kafka
        component: back 
    spec:
      containers:
      - name: back
        image: joellord/kafka-back
        # resources:
        #   limits:
        #     memory: "128Mi"
        #     cpu: "500m"
        ports:
        - containerPort: 3000
        env:
        - name: PORT
          value: "3000"
        - name: KAFKA_BROKER
          value: kafka-0.kafka-headless.default.svc.cluster.local:9092
---
apiVersion: v1
kind: Service
metadata:
  name: back  
  labels:
    app: kafka
    component: back
spec:
  selector:
    component: back
  ports:
  - port: 80
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer
  labels:
    app: kafka
    component: consumer
spec:
  selector:
    matchLabels:
      app: kafka
      component: consumer
  template:
    metadata:
      labels:
        app: kafka
        component: consumer 
    spec:
      containers:
      - name: consumer
        image: joellord/kafka-consumer
        # resources:
        #   limits:
        #     memory: "128Mi"
        #     cpu: "500m"
        env: 
        - name: KAFKA_BROKER
          value: kafka-0.kafka-headless.default.svc.cluster.local:9092
        ports:
        - containerPort: 3001
---
apiVersion: v1
kind: Service
metadata:
  name: consumer  
  labels:
    app: kafka
    component: consumer
spec:
  selector:
    component: consumer
  ports:
  - port: 3001
    targetPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
  labels:
    app: kafka
    component: auth
spec:
  selector:
    matchLabels:
      app: kafka
      component: auth
  template:
    metadata:
      labels:
        app: kafka
        component: auth 
    spec:
      containers:
      - name: auth
        image: joellord/kafka-auth
        ports:
        - containerPort: 3002
        env:
        - name: PORT
          value: "3002"
        - name: CONN_STR
          value: "mongodb+srv://blog:blog@cluster0.2grje.mongodb.net/test"
        - name: DB
          value: "data-metamorphosis"
---
apiVersion: v1
kind: Service
metadata:
  name: back  
  labels:
    app: kafka
    component: back
spec:
  selector:
    component: back
  ports:
  - port: 80
    targetPort: 3000